        
variables:
  # maven option to clean the generated target folder.
  MAVEN_CLEAN_OPT: "clean"

  # generated WAR file name by maven command "mvn package".
  GENERATED_WAR_FILE_NAME: "csci5308_test.war"

  # target folder name where all build related artifacts are stored/downloaded.
  TARGET_FOLDER_NAME: "target"

  
stages:
  # compiles this application.
    - compile

  # tests this application.
    - test

  # builds this application.
    - build
  
  # deploy this application on heroku.
    - deploy

frontend-compile:
    stage: compile
    tags:
        - dalfcs_docker_autoscale
    image: node:16.14.0	
    script:
        - echo "compiling frontend application"
        - cd frontend
        - npm install
        - echo "completed compiling frontend application"
        
backend-compile:
    stage: compile
    tags:
        - ugrad
    image: maven:3-jdk-8	
    script:
        - echo "compiling backend application"
        - cd backend
        - mvn clean compile
        - echo "completed compiling backend application"

backend-test:
    stage: test
    tags:
        - ugrad
    image: maven:3-jdk-8	
    script:
        - echo "testing backend application"
        - cd backend
        - mvn test	
        - echo "backend application has been tested"

frontend-build:
    stage: build
    tags:
        - dalfcs_docker_autoscale
    image: node:16.14.0	
    script:
        - echo "building frontend application"
        - cd frontend
        - npm install
        - npm run build
        - echo "frontend application has been built"
    artifacts:
        paths:
        - public 		
        
backend-build:
    stage: build
    tags:
        - ugrad
    image: maven:3-jdk-8	
    script:
        - echo "building backend application"
        - cd backend
        - mvn package
        - echo "backend application has been built"
    artifacts:
        when: on_success
        paths:
        - $TARGET_FOLDER_NAME/*.war

frontend-deploy:
    stage: deploy
    image: ruby:latest
    tags:
        - dalfcs_docker_autoscale 
    script:
        - echo "deploying frontend application"
        - cd frontend
        - rm -f package-lock.json
        - apt-get update -qy
        - apt-get install -y ruby-dev
        - gem install dpl
        - dpl --provider=heroku --app=$HEROKU_FE_APP_NAME --api-key=$HEROKU_FE_APP_KEY
        - echo "frontend application has been built"        

backend-deploy:
    stage: deploy
    image: ruby:latest
    tags:
        - dalfcs_docker_autoscale 
    script:
        - echo "deploying backend application"
        - cd backend
        - apt-get update -qy
        - apt-get install -y ruby-dev
        - gem install dpl
        - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_KEY
        - echo "backend application has been built"		